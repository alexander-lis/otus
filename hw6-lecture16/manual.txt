*** Структура приложения ***
- В качестве брокера сообщений используется RabbitMQ. Экземпляр поднят в https://www.cloudamqp.com/.

*** Взаимодействие сервисов ***
- Сервис Auth - пользователи.
- Сервис Orders - заказы.
- Сервис Billing - счета.
- Сервис Notifications - уведомления.

Логически разделил сообщения на события и команды.
Команды принимаются сервисом уведомлений и он сам определяет их контракт. Их может отправить любой сервис.
События генерируются конкретным сервисом. На них может подписаться любой сервис.

Сервис Notifications определяет 4 вида команд (или уведомлений):
    - NotifyOrderCreated - команда на отправку уведомления о создании заказа.
    - NotifyOrderPaymentSucceded - команда на отправку уведомления об успешной оплате заказа.
    - NotifyOrderPaymentDeclined - команда на отправку уведомления об неудачной оплате заказа.
    - NotifyUserCreated - команда на отправку уведомления об успешной регистрации.

Сервис Auth после успешной регистрации пользователя через REST API публикует в RabbitMQ:
    - Команду NotifyUserCreated.
    - Событие UserCreated.

Сервис Billing подписывается на: 
    - Событие UserCreated и создает лицевой счет пользователя при его получении.
    - Событие OrderCreated и пытается списать деньги со счета при его получении.
    а так же публикует:
    - Команду NotifyOrderPaymentSucceded при успешной оплате.
    - Команду NotifyOrderPaymentDeclined при неудачной оплате.
    
Серивс Orders после успешного создания заказа через REST API публикует в RabbitMQ:
    - Команду NotifyOrderCreated.
    - Событие OrderCreated.

*** Установка приложения и запуск тестов ***
Все действия выполнялись в Minikube.
1. Перейти в папку "hw6-lecture16/myapp-chart".
2. Выполнить команду "helm install myapp . -f values.yaml" или "helm install myapp . -f values-arm.yaml" в зависимости от процессора.
3. Тестирование:
- При прогоне тестов автоматически генерируются login/password для пользователя и запускаются кейсы в соответствии с заданием.
- Перейти в папку "hw6-lecture16/postman".
- Открыть в Postman коллекцию "otus_hw6.postman_collection.json" и запустить тесты.
- Или выполнить команду "newman run otus_hw6.postman_collection.json". Актуальные body ответов и запросов логируются в консоль.